import java.awt.Component;
import java.awt.Container;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPasswordField;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class InputGUI extends JFrame {
	/** SerialVersionUID **/
	private static final long serialVersionUID = 1L;

	GridBagLayout gBag;
	JTextField tfTt, tfDay, tfTime, tfWth;
	JTextArea taCnt;
	JButton btnBack, btnDel, btnRes;
	
	public InputGUI() {
		super("다이어리");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		Container c = getContentPane();
		gBag = new GridBagLayout();
		c.setLayout(gBag);
		
		gbinsert(new JLabel("제목 "),0,0,1,1); //제목 입력칸 생성
		tfTt = new JTextField(20);
		gbinsert(tfTt,1,0,5,1);
		gbinsert(new JLabel(" "),0,1,4,1);
		
		gbinsert(new JLabel(" "),0,2,4,1);
		gbinsert(new JLabel("날짜 ",JLabel.RIGHT),4,2,1,1); //날짜 입력칸 생성
		tfDay = new JTextField(3);
		gbinsert(tfDay,5,2,1,1);
		
		gbinsert(new JLabel(" "),0,3,4,1);
		gbinsert(new JLabel("시간 ",JLabel.RIGHT),4,3,1,1); //시간 입력칸 생성
		tfTime = new JTextField(3);
		gbinsert(tfTime,5,3,1,1);

		gbinsert(new JLabel(" "),0,4,5,1);
		gbinsert(new JLabel("날씨 "),0,5,1,1); //날씨 입력칸 생성
		tfWth = new JTextField(20);
		gbinsert(tfWth,1,5,4,1);
		
		gbinsert(new JLabel("내용 "),0,6,1,1); //내용 입력칸 생성
		taCnt = new JTextArea(7,20);
		gbinsert(taCnt,1,6,4,4);

		gbinsert(new JLabel(" "),0,10,5,1);
		btnBack = new JButton("취소");
		gbinsert(btnBack,0,11,3,1);
		btnDel = new JButton("전체삭제");
		gbinsert(btnDel,3,11,2,1);
		btnRes = new JButton("등록");
		gbinsert(btnRes,5,11,1,1);
		
		btnBack.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				new Diary(); setVisible(false);
			}
		}); //돌아가기 버튼
		btnDel.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				tfTt.setText("");
				tfDay.setText("");
				tfTime.setText("");
				tfWth.setText("");
				taCnt.setText("");
			}
		}); //전체삭제 버튼
		btnRes.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try { //DB연결
					conn = DBConn.dbConnection();
					stmt = conn.createStatement(); //SQL문 입력
					
					String id   = tfId.getText().toString();
					String name = tfName.getText().toString();
					String dept = tfDept.getText().toString();
					
					//데이터 입력 name-tfName | dept-tfDept | id-tfId
					stmt.executeUpdate("insert into testtable values('"+name+"', '"+dept+"', '"+id+"');");
					System.out.println(name+"입력 완료");
					
					//JTF 초기화
					tfId.setText("");
					tfName.setText("");
					tfDept.setText("");
					//DB, SQL종료
					stmt.close();
					conn.close();
				
				//예외처리
				} catch (SQLIntegrityConstraintViolationException e) {
					System.out.println("Constraint 제약 조건 에러");
				} catch (SQLException e) {
					System.out.println("SQL 실행 에러");
				} catch (Exception e) { e.printStackTrace(); }
			}
		}); //등록 버튼
				
		setSize(400,500);
		setVisible(true);
	}
	
	public void gbinsert(Component c, int x, int y, int w, int h) {
		GridBagConstraints gbc = new GridBagConstraints();
		gbc.fill = GridBagConstraints.BOTH;
		gbc.gridx = x;
		gbc.gridy = y;
		gbc.gridwidth = w;
		gbc.gridheight = h;
		gBag.setConstraints(c,gbc);
		this.add(c);
	}
	
	//임시
	public static void main(String[] args) {
		new InputGUI(); //생성자 실행
	}
}